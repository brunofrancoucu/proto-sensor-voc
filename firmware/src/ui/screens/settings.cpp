#include "ui/screens.h"
#include "core/state.h"
#include "helpers/blink.h"

static const unsigned char PROGMEM image_volume_0[] = {0x01,0xc0,0x00,0x02,0x40,0x00,0x04,0x40,0x00,0x08,0x40,0x00,0xf0,0x50,0x40,0x80,0x48,0x80,0x80,0x45,0x00,0x80,0x42,0x00,0x80,0x45,0x00,0x80,0x48,0x80,0xf0,0x50,0x40,0x08,0x40,0x00,0x04,0x40,0x00,0x02,0x40,0x00,0x01,0xc0,0x00,0x00,0x00,0x00};
static const unsigned char PROGMEM image_volume_1[] = {0x01,0xc0,0x00,0x02,0x40,0x00,0x04,0x40,0x00,0x08,0x40,0x00,0xf0,0x50,0x00,0x80,0x48,0x00,0x80,0x44,0x00,0x80,0x44,0x00,0x80,0x44,0x00,0x80,0x48,0x00,0xf0,0x50,0x00,0x08,0x40,0x00,0x04,0x40,0x00,0x02,0x40,0x00,0x01,0xc0,0x00,0x00,0x00,0x00};
static const unsigned char PROGMEM image_volume_2[] = {0x01,0xc1,0x00,0x02,0x40,0x80,0x04,0x44,0x40,0x08,0x42,0x20,0xf0,0x51,0x20,0x80,0x49,0x10,0x80,0x44,0x90,0x80,0x44,0x90,0x80,0x44,0x90,0x80,0x49,0x10,0xf0,0x51,0x20,0x08,0x42,0x20,0x04,0x44,0x40,0x02,0x40,0x80,0x01,0xc1,0x00,0x00,0x00,0x00};
static const unsigned char PROGMEM image_volume_3[] = {0x01,0xc1,0x00,0x02,0x40,0x80,0x04,0x44,0x40,0x08,0x42,0x20,0xf0,0x51,0x20,0x80,0x49,0x30,0x80,0x44,0x90,0x80,0x44,0x90,0x80,0x44,0x90,0x80,0x49,0x30,0xf0,0x51,0x20,0x08,0x42,0x20,0x04,0x44,0x60,0x02,0x40,0xc0,0x01,0xc1,0x80};

static const std::vector<const unsigned char*> vol_icon = {
    image_volume_0,
    image_volume_1,
    image_volume_2,
    image_volume_3
};

static const unsigned char PROGMEM image_display_brightness_bits[] = {0x01,0x00,0x21,0x08,0x10,0x10,0x03,0x80,0x8c,0x62,0x48,0x24,0x10,0x10,0x10,0x10,0x10,0x10,0x48,0x24,0x8c,0x62,0x03,0x80,0x10,0x10,0x21,0x08,0x01,0x00,0x00,0x00};
static auto& oled = state.display.oled;

static Blink volume;
static Blink brightness;

void paintSettingBox(bool isSelected, bool isActive, const unsigned char* icon, String text, int x, int y)
{
    const int txtWidth = 24;
    oled.drawBitmap(x + 6, y + 6, icon, 20, 16, 1);
    oled.setCursor(x + 6 + 4 + 20, y + 6 + 4);
    blinkIf(isActive, volume, [&](){ oled.print(text); }, 0);

    if (isSelected) {
        oled.drawRoundRect(x, y, 62, 26, 7, 1);
    }
}

void settings::paint(Config config)
{
    static int volLast = -1; // value
    static int volIconId = -1; // map()

    // volume
    if (volLast != config.volume) {
        volLast = config.volume;
        volIconId = map(config.volume, 0, 100, 0, 3);
    }
    paintSettingBox(true, true, vol_icon[volIconId], String(config.volume) + " %", 64, 20);

    // brightness
    paintSettingBox(true, false, image_display_brightness_bits, String(config.brightness) + " %", 4, 20);
    
}
